import java.util.List;

import java.util.Arrays;


/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        List<Item> ALL_ITEMS = Arrays.asList(
                new Item("ITEM0001", "Braised chicken", 18.00),
                new Item("ITEM0013", "Chinese hamburger", 6.00),
                new Item("ITEM0022", "Cold noodles", 8.00),
                new Item("ITEM0030", "coca-cola", 2.00)
        );
        List<SalesPromotion> ALL_SALES_PROMOTIONS = Arrays.asList(
                new SalesPromotion("BUY_30_SAVE_6_YUAN", "Deduct 6 yuan when the order reaches 30 yuan", Arrays.asList()),
                new SalesPromotion("50%_DISCOUNT_ON_SPECIFIED_ITEMS", "Half price for certain dishes", Arrays.asList(
                        "ITEM0001", "ITEM0022"
                ))
        );

        int total_sum = 0;
        int deduct_6 = 0;
        int save_6;
        int price;
        int flag=0;

        List<String> half_discount;
        half_discount = ALL_SALES_PROMOTIONS.get(1).getRelatedItems();

        String output="============= Order details =============\n";
        for (String input : inputs) {
            String itemId = input.split(" ")[0];
            int quantity = Integer.parseInt(input.split(" ")[2]);
            //itemList.add(itemId);

            for (Item all_item : ALL_ITEMS) {
                if (itemId.equals(all_item.getId())) {
                    price = (int) (quantity * all_item.getPrice());
                    total_sum += price;
                    output += all_item.getName() + " x " + quantity + " = " + price + " yuan\n";
                    for (String s : half_discount) {
                        if (itemId.equals(s)) {
                            deduct_6 += price / 2;
                            flag++;
                            break;
                        }
                    }
                }
            }
        }
        output+="-----------------------------------\n";
        if(total_sum>=30||flag>0){
            save_6=total_sum-6;
            output+="Promotion used:\n";
            if(save_6<=(total_sum-deduct_6)){
                output+="BUY_30_SAVE_6_YUAN，saving 6 yuan\n"+
                        "-----------------------------------\n"+
                        "Total："+save_6+" yuan\n";
            }else{
                output+="Half price for certain dishes ("+"Braised chicken，Cold noodles"+")，saving "+deduct_6+" yuan\n"+
                        "-----------------------------------\n"+
                        "Total："+(total_sum-deduct_6)+" yuan\n";
            }
        }else{

            output+="Total："+total_sum+" yuan\n";
        }


        output+="===================================";
        System.out.println(output);
        return output;
    }
}
